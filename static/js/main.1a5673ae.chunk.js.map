{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","stats","Notification","message","FeedbackOptions","options","onLeaveFeedback","container","map","option","button","onClick","Section","title","children","section","App","state","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","setState","prevState","this","percent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,UAAY,qC,gBCAvED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,sCCA7DD,EAAOC,QAAU,CAAC,MAAQ,4B,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,sLCsBbC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIC,UAAWC,IAAEC,MAAjB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,W,iBCCSI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGJ,UAAWC,IAAEG,QAAhB,SAA0BA,K,gBCoBpBC,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKP,UAAWC,IAAEO,UAAlB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBAEEV,UAAWC,IAAEU,OACbC,QAAS,kBAAML,EAAgBG,IAHjC,SAKGA,GAJIA,S,gBCSAG,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACE,oBAAIhB,UAAWC,IAAEa,MAAjB,SAAyBA,IACxBC,MCADE,E,4MAEJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPsB,mBAAqB,WAEnB,OADc,EAAKD,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAIlEuB,gCAAkC,WAChC,IAAMtB,EAAQ,EAAKqB,qBACbE,EAAgC,IAAlB,EAAKH,MAAMvB,KAAcG,EAC7C,OAAOwB,KAAKC,MAAMF,I,EAGpBd,gBAAkB,SAACG,GACjB,EAAKc,UAAS,SAACC,GACb,OAAO,eAAGf,EAASe,EAAUf,GAAU,O,4CAI3C,WACE,MAA+BgB,KAAKR,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB8B,EAAUD,KAAKN,kCACftB,EAAQ4B,KAAKP,qBAEnB,OACE,sBAAKnB,UAAWC,IAAEO,UAAlB,UACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBmB,KAAKnB,oBAI1B,cAAC,EAAD,CAASO,MAAM,aAAf,SACGhB,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB4B,IAGtB,cAAC,EAAD,CAAcvB,QAAQ,+B,GAlDhBwB,aA0DHX,IC5DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1a5673ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__28Ou7\",\"container\":\"FeedbackOptions_container__3_5j5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1qwpJ\",\"title\":\"Section_title__byf0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__1XXJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__LompS\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={s.stats}>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive Feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={s.message}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          className={s.button}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section;","import { Component } from 'react';\nimport s from './App.module.css'\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  \n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback()\n    const percentage = (this.state.good * 100) / total\n    return Math.round(percentage)\n  }\n  \n  onLeaveFeedback = (option) => {\n    this.setState((prevState) => {\n      return { [option]: prevState[option] + 1 }\n    })\n  }\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    const percent = this.countPositiveFeedbackPercentage();\n    const total = this.countTotalFeedback();\n\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percent}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}